package global.sesoc.sample.dao;

import java.util.ArrayList;
import java.util.concurrent.ExecutionException;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import global.sesoc.sample.controller.NoticeController;
import global.sesoc.sample.vo.Notice;


/**
 * 개인정보 관련 DB처리를 담당
 */
@Repository
public class NoticeDAO {

	private static final Logger logger = LoggerFactory.getLogger(NoticeController.class);
	@Autowired
	private SqlSession session;
	
	public int noticeInsert(Notice notice) {
		int count =0;
		try {
			NoticeMapper mapper = session.getMapper(NoticeMapper.class);
			count = mapper.noticeInsert(notice);
		}catch(Exception e) {
			e.printStackTrace();
			//파일을 삭제(물리적) -인셉션이 발생하면 실시.
		}
		return count;
	}
	
	
	public ArrayList<Notice> noticeSelectList(){
		ArrayList<Notice> list = null;
		
		try {
			NoticeMapper mapper = session.getMapper(NoticeMapper.class);
			list = mapper.noticeSelectList();
		}catch(Exception e) {
			e.printStackTrace();
		}
		logger.info("noticeSelectList() list : {}", list);
		return list;
	}
	
	public Notice   noticeSelectOne(int notice_no) {
		Notice notice = null;
		try {
			NoticeMapper mapper = session.getMapper(NoticeMapper.class);
			notice = mapper.noticeSelectOne(notice_no);
		}catch(Exception e) {
			e.printStackTrace();
			//파일을 삭제(물리적) -인셉션이 발생하면 실시.
		}
		logger.info("noticeSelectOne() notice : {}", notice);		
		return notice;	
	}
	
	public int noticeUpdate(Notice notice){
		int count =0;
		try {
			NoticeMapper mapper = session.getMapper(NoticeMapper.class);
			count = mapper.noticeUpdate(notice);
		}catch(Exception e) {
			e.printStackTrace();
			//파일을 삭제(물리적) -인셉션이 발생하면 실시.
		}
		return count;
	}
}
