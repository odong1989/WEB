<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="global.sesoc.sample.dao.NoticeMapper">
	
	<insert id="noticeInsert" parameterType="notice">
	insert into
		notice(
			notice_no
			,notice_title
			,notice_context
			,notice_name
			<if test="notice_savedfile != null and notice_originfile != null">
				,notice_savedfile
				,notice_originfile
			</if>
		)values(
			notice_seq.nextval
			,#{notice_title}
			,#{notice_context}
			,#{notice_name}
			<if test="notice_savedfile != null and notice_originfile != null">
				,#{notice_savedfile}
				,#{notice_originfile}
			</if>		
		)
	</insert>	
	<!-- 날짜와 조회수는 미 입력시 자동으로 기본설정값 입력되니까 기입안해도 됩니다. -->
	<!-- 파일은 첨부할 수도, 첨부 않을수도 있기에 동적쿼리를 작성하여 처리합니다. 
		 동적쿼리는 양쪽 모두 작성합니다.-->
		 
		 <select id="noticeSelectList" resultType="notice">
		 select
			notice_no
			,notice_title
			,notice_name
			,notice_hits
			,notice_savedfile
			,notice_originfile
			,to_char(notice_indate,'yyyy-MM-dd') as notice_indate
		from
			notice
		order by
			notice_no desc
		 </select>
		 
		 <select id="noticeSelectOne" parameterType="int" resultType="notice">
		 select
			notice_no
			,notice_title
			,notice_name
			,notice_context
			,notice_hits
			,notice_savedfile
			,notice_originfile
			,to_char(notice_indate,'yyyy-MM-dd') as notice_indate
		from
			notice
		where
			notice_no= #{notice_no}
		 </select>
		 
		 
	<update id="noticeUpdate" parameterType="notice">
		update notice
		set
			notice_title=#{notice_title}
			,notice_context=#{notice_context}
			,notice_name=#{notice_name}
			<!-- 동적쿼리 작성시 파라미터 notice는 VO객체이기에 
				notice_savedfile 변수를 갖고 있는 덕분에
				동적쿼리의 조건으로 그대로 사용을 할수 있다. -->
			<if test="notice_savedfile != null and notice_originfile != null">
				,notice_savedfile =#{notice_savedfile}
				,notice_originfile=#{notice_originfile}
			</if>
		where notice_no = #{notice_no}<!-- where조건을 않으면 데이터전부들을 덮어씌워버리게 된다. 그러니 조거문where을 반드시 쓰자!! -->
		</update> 
		<!-- 2020.02.03조회수 갱신 -->
		<update id="updateHits" parameterType="int">
		update
			notice
		set
			notice_hits=notice_hits+1
		where
			notice_no = #{notice_no}
		</update>
		<!-- 수정 삭제할 때는 Pk를 대조하는 것을 잊지맙시다!!! -->
	
	
		<!-- 2020.02.04페이징 검색을 위해서 2월3일꺼에서 파라미터 추가, where 조건 및 와일드카드(%) 추가.
		 [굿!]'%' || #{searchText} || '%' =>사용자가 입력하는 임의의값으로 검색하도록 한다.
		 [낫굿!]'%'#{searchText}'%' =>	#{searchText}라는 문장으로 검색하게 된다.
		 -->	

		<select id="noticeSelectCount" resultType="int" parameterType="string">
		 select
		 	count(*)
		 from
		    notice
		
		<!-- 파라미터가 VO또는 해시맵이 아닌경우 동적쿼리를 쓸경우 _parameter 라고  해야
		  	 제대로 작동합니다. 여기서는 파라미터인 searchText는 스트링형이기에 동적쿼리를 그대로 쓸수 없어요. 
		 -->
		 <if test=" _parameter !='' ">
		 	where
				notice_title like '%' || #{searchText} || '%' 
		 </if>
		
		 </select> 

	
	<!-- 2020.02.03 페이징 -->
	<!-- 
	<select id="noticeSelectCount" resultType="int">
		 select
		 	count(*)
		 from
		    notice

		 </select> -->
		 	
		 
</mapper>
